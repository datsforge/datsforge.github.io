/* 
  © 2025 datsforge 
  Proprietary – See LICENSE for details. 
*/

/* === CONTAINER === */
/* Surface background for content wrapping */
.container {
  background-color: var(--md-sys-color-surface);
  margin: var(--md-sys-spacing-4xl) var(--md-sys-spacing-6xl);
}

/* === SECTION VARIANTS === */

.section {
  padding-block: var(--md-sys-spacing-sm);
}

.section-divider {
  padding-top: var(--md-sys-spacing-2xl);
  border-top: var(--md-sys-border-thin) solid var(--md-sys-color-outline-variant);
}

.section-centered {
  text-align: center;
}

/* === FLEX LAYOUT COMPONENTS === */
/* Vertical stack layout */
.layout-column {
  display: flex;
  flex-direction: column;
  gap: var(--md-sys-spacing-sm);
}

/* Horizontal row layout */
.layout-row {
  width: 100%;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  gap: var(--md-sys-spacing-sm);
}

.layout-legal-page h2,
.layout-legal-page h3 {
  line-height: 2.7;
}

/* === ALIGNMENT UTILITIES === */

/* Align items along the cross-axis (Y in row, X in column) */
.align-start {
  align-items: flex-start;
}

.align-center {
  align-items: center;
  text-align: center;
}

.align-end {
  align-items: flex-end;
  text-align: end;
}

.align-stretch {
  align-items: stretch;
}

/* Justify content along the main axis (X in row, Y in column) */
.justify-start {
  justify-content: flex-start;
}

.justify-center {
  justify-content: center;
}

.justify-end {
  justify-content: flex-end;
}

.justify-between {
  justify-content: space-between;
}

.justify-around {
  justify-content: space-around;
}

.justify-evenly {
  justify-content: space-evenly;
}

/* === FLEXIBLE TABLE === */
.flex-table {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
  padding: 1rem;
  border-radius: var(--md-sys-shape-medium);
  background-color: var(--md-sys-color-surface-container);
  box-shadow: var(--md-sys-elevation-1);
}

/* orientation */
.flex-table.row {
  flex-direction: row;
  justify-content: flex-start;
  align-content: flex-start;
}

.flex-table.column {
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
}

/* table cell */
.flex-table-cell {
  display: flex;
  align-items: baseline;
  justify-content: baseline;
  background-color: var(--md-sys-color-surface-container-highest);
  color: var(--md-sys-color-on-surface);
  font-family: var(--md-sys-font-family-primary, 'Roboto', sans-serif);
  border-radius: var(--md-sys-shape-small, 8px);
  box-shadow: var(--md-sys-elevation-0);
  transition: background-color 0.2s ease;
  flex: 0 0 auto;
  overflow: hidden;
  position: relative;
  text-align: left;
  padding: var(--md-sys-spacing-lg);
  flex-direction: column;
  font-size: var(--md-sys-typescale-body-medium);
}

/* empty cell */
.flex-table-cell:empty::after {
  content: '';
  display: block;
  width: 100%;
  height: 100%;
}

/* size */
.flex-table-cell.small {
  width: 120px;
  height: 100px;
  font-size: var(--md-sys-typescale-body-small);
}

.flex-table-cell.medium {
  width: 180px;
  height: 140px;
  font-size: var(--md-sys-typescale-body-medium);
}

.flex-table-cell.large {
  width: 240px;
  height: 180px;
  font-size: var(--md-sys-typescale-body-large);
}

.flex-table-cell.xl {
  width: 300px;
  height: 220px;
  font-size: var(--md-sys-typescale-headline-small);
}

/* Optional header */
.flex-table-header {
  font-weight: 600;
  background-color: var(--md-sys-color-surface-container-highest);
  color: var(--md-sys-color-on-surface-variant);
  padding: 0.75rem;
  border-radius: var(--md-sys-shape-small);
}

.flex-table-cell.transparent {
  background-color: transparent;
}


/* === SVG icon inside the button === */
.icon-button .icon {
  width: 24px;
  height: 24px;
  display: block;
  pointer-events: none;
  transition: color var(--md-sys-motion-medium);
  fill: currentColor;
}

.icon-toggle-btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border: none;
  background: var(--md-sys-color-surface-container-high, );
  color: var(--md-sys-color-on-surface);
  border-radius: var(--md-sys-shape-medium, 1.5rem);
  box-shadow: var(--md-sys-elevation-1, 0 1px 2px rgba(0, 0, 0, 0.08));
  padding: 0.5rem;
  cursor: pointer;
  transition: background 0.2s, color 0.2s, box-shadow 0.2s;
  outline: none;
}

.icon-toggle-btn:focus-visible {
  box-shadow: 0 0 0 2px var(--md-sys-color-primary);
}

.icon-toggle-btn .icon {
  transition: transform 0.3s cubic-bezier(.4, 0, .2, 1), opacity 0.2s;
  width: 24px;
  height: 24px;
}

.icon-toggle-btn.toggled .icon {
  transform: rotate(180deg) scale(1.1);
  opacity: 0.85;
}

.icon-toggle-btn:hover,
.icon-toggle-btn:focus-visible {
  background: var(--md-sys-color-secondary-container);
  color: var(--md-sys-color-on-secondary-container);
  box-shadow: 0 2px 8px rgba(103, 80, 164, 0.10);
}

/* === Toggle Button with icon(Invisible Checkbox) use on checkbox with label  === */
.toggle-button {
  position: absolute;
  width: 0;
  height: 0;
  opacity: 0;
  pointer-events: none;
}

/* Toggle Button Label  */
.toggle-button-label {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: var(--md-sys-spacing-xs);
  border-radius: var(--md-sys-shape-small);
  color: var(--md-sys-color-on-surface-variant);
  background-color: transparent;
  cursor: pointer;
  transition: background-color var(--md-sys-motion-medium), color var(--md-sys-motion-medium);
}

/*  Icon Sizes  */
.toggle-button-label .icon-small {
  width: 12px;
  height: 12px;
}

.toggle-button-label .icon {
  width: 24px;
  height: 24px;
}

.toggle-button-label .icon-medium {
  width: 42px;
  height: 42px;
}

/* Shared Icon Styles */
.toggle-button-label .icon,
.toggle-button-label .icon-small,
.toggle-button-label .icon-medium {
  display: flex;
  align-items: center;
  justify-content: center;
  transition: color var(--md-sys-motion-medium);
}

/*  Checked State (Active Toggle)  */
.toggle-button:checked~.toggle-button-label,
.toggle-button:hover~.toggle-button-label {
  background-color: var(--md-sys-color-secondary-container);
  color: var(--md-sys-color-on-secondary-container);
}

.toggle-button:checked~.toggle-button-label .icon,
.toggle-button:checked~.toggle-button-label .icon-small,
.toggle-button:checked~.toggle-button-label .icon-medium {
  color: var(--md-sys-color-on-secondary-container);
}

/* Floating Action Button (FAB) */
.fab {
  position: fixed;
  bottom: 2rem;
  right: 2rem;
  z-index: 1000;

  display: inline-flex;
  align-items: center;
  justify-content: center;

  width: 56px;
  height: 56px;
  border-radius: 50%;

  background-color: var(--md-sys-color-primary);
  color: var(--md-sys-color-on-primary);

  border: none;
  outline: none;
  cursor: pointer;

  font-size: 1.5rem;

  box-shadow:
    0 1px 2px rgba(0, 0, 0, 0.3),
    0 4px 6px rgba(0, 0, 0, 0.15);

  transform: translateY(0) scale(1);
  transition:
    background-color 0.2s ease,
    box-shadow 0.2s ease,
    transform 0.2s cubic-bezier(0.4, 0, 0.2, 1),
    opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Hover state: slight elevation & tone shift */
.fab:hover {
  background-color: var(--md-sys-color-secondary);
  box-shadow:
    0 2px 4px rgba(0, 0, 0, 0.25),
    0 6px 12px rgba(0, 0, 0, 0.15);
}

/* Pressed/Active state */
.fab:active {
  background-color: var(--md-sys-color-primary-container);
  color: var(--md-sys-color-on-primary-container);
  transform: scale(0.95);
}

/* Focus-visible (keyboard nav) */
.fab:focus-visible {
  box-shadow:
    0 0 0 3px var(--md-sys-color-secondary),
    0 4px 6px rgba(0, 0, 0, 0.15);
}

/* Icon inside FAB */
.fab svg {
  width: 28px;
  height: 28px;
  fill: currentColor;
  pointer-events: none;
  transition: fill 0.2s ease;
}

/* Optional fab hide animation */
.fab-hide {
  opacity: 0;
  pointer-events: none;
  transform: scale(0.85) translateY(20px);
}

/* Optional Bounce Hover Effect */
.fab-bounce-hover:hover {
  animation: fabBounce 0.4s ease-out;
  transform-origin: center;
}

/* Bounce keyframes */
@keyframes fabBounce {
  0% {
    transform: scale(1);
  }

  30% {
    transform: scale(1.2);
  }

  60% {
    transform: scale(0.96);
  }

  100% {
    transform: scale(1);
  }
}

/* Optional Icon shoot up effect */
.fab-icon-shoot-up {
  display: inline-block;
  will-change: transform, opacity;
}

.fab:hover .fab-icon-shoot-up {
  animation: shootUp 0.4s ease;
}

@keyframes shootUp {
  0% {
    transform: translateY(0);
    opacity: 1;
  }

  35% {
    transform: translateY(-14px);
    opacity: 0.7;
  }

  60% {
    transform: translateY(-24px);
    opacity: 0;
  }

  65% {
    transform: translateY(28px);
    opacity: 0;
  }

  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

/* === Inputs and Textareas === */
input,
textarea,
select {
  font-family: var(--md-sys-font-family-primary);
  font-size: var(--md-sys-typescale-body-large);
  padding: var(--md-sys-spacing-xs);
  border: 1px solid var(--md-sys-color-outline);
  border-radius: var(--md-sys-shape-small);
  transition: border-color var(--md-sys-motion-short);
}

input:focus,
textarea:focus,
select:focus {
  border-color: var(--md-sys-color-primary);
  outline: none;
}

/* Tables */
table {
  border-collapse: collapse;
  width: 100%;
  margin-bottom: var(--md-sys-spacing-lg);
}

th,
td {
  text-align: left;
  padding: var(--md-sys-spacing-sm);
  border-bottom: 1px solid var(--md-sys-color-outline);
}

/* Images */
img {
  max-width: 100%;
  height: auto;
  display: block;
}

/* Utility */
.hidden {
  display: none !important;
}

.visually-hidden {
  position: absolute !important;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

/* === Cards === */
.card {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  padding: var(--md-sys-spacing-2xl);
  border-radius: var(--md-sys-shape-small);
  background-color: var(--md-sys-color-surface-container);
  box-shadow: var(--md-sys-elevation-1);
  /* border-bottom: var(--border-size, 1px) solid var(--color-border); */
  text-align: start;
}

/* === Alignment Variant: Right Aligned === */
.card.align-right {
  text-align: end;
}

/* === Card Media (Image) === */
.card-media {
  max-width: 35vw;
  max-height: 70vh;
  height: auto;
  object-fit: contain;
  align-self: flex-start;
}

/* === Card Content === */
.card-content {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  gap: var(--md-sys-spacing-md);
  text-decoration: none;
}

/* === Align Content Within Card === */
.card.align-right .card-content {
  align-items: flex-end;
}

.card.align-left .card-content {
  align-items: flex-start;
}

/* === Link Group Inside Cards === */
.card .link-with-icon-group {
  display: flex;
  flex-direction: column;
  gap: var(--md-sys-spacing-sm);
}

.card.align-left .link-with-icon-group {
  align-items: flex-start;
}

.card.align-right .link-with-icon-group {
  align-items: flex-end;
}

/* === Text Button With Icon (Link Style) === */
.button-text-icon {
  display: inline-flex;
  align-items: center;
  gap: var(--md-sys-spacing-xs);
  text-decoration: none;
  position: relative;
  cursor: pointer;

  /* color: var(--md-sys-color-on-surface-variant); */
  font-size: var(----md-sys-typescale-body-medium);
  font-family: var(--md-sys-font-family-secondary);

  transition: color var(--md-sys-motion-short);
}

/* === Underline Animation === */
.button-text-icon::after {
  content: "";
  position: absolute;
  left: 50%;
  bottom: -2px;
  width: 80%;
  height: 2px;
  background-color: currentColor;
  border-radius: 2px;
  opacity: 0;
  transform: translateX(-50%);
  transition:
    width var(--md-sys-motion-medium),
    opacity var(--md-sys-motion-short);
}

.button-text-icon:hover::after,
.button-text-icon:focus::after,
.button-text-icon:active::after {
  width: 100%;
  opacity: 1;
  left: 50%;
}

.button-text-icon .icon {
  width: 24px;
  height: 24px;
  margin-left: 12px;
}

/* === Optional Modifier: Icon Before or After === */
.button-text-icon.icon-start {
  flex-direction: row-reverse;
}